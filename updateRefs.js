/**
 * Simple script to generate main.d.ts based on files
 */

var glob = require('glob');
var fs = require('fs');
var path = require('path');
var Q = require('q');

module.exports = function() {
	var output = '';
	var outFile = 'main.d.ts';

	var dfd = Q.defer();

	// Get filenames
	var patterns = [
		'app/**/*.d.ts',
		'boot/**/*.d.ts',
		'lib/**/*.d.ts'
	];

	var filenames = [];
	for(i = 0; i < patterns.length; ++i) {
		filenames = filenames.concat(glob.sync(patterns[i], {
			root: __dirname
		}));
	}

	console.log('Found ' + filenames.length + ' definitions...');

	// Make the references
	output += '/* Generated by `node '+path.basename(__filename)+'` */\n';
	output += '/// <reference path="typings/tsd.d.ts" />\n';
	for(i = 0; i < filenames.length; ++i) {
		output += '/// <reference path="'+filenames[i]+'" />\n';
	}

	// Save new file
	fs.writeFile(outFile, output, function(err) {
		if(err) {
			console.log(err);
			dfd.reject();
			return;
		}

		console.log('References updated in "' + outFile+ '"');
		dfd.resolve();
	});

	return dfd.promise;
};

